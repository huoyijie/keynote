{{ template "head-bootstrap.htm" . }}
    <div id="app" class="container bg-light px-0 vh-100">
        <nav class="navbar navbar-dark bg-dark navbar-expand-lg bg-body-tertiary">
          <div class="container-fluid">
            <span></span>
            <a class="navbar-brand d-block position-absolute ms-0" href="{{.Site.Link}}"><img src="{{.Site.Logo}}" class="img-fluid rounded"></a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
              <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarSupportedContent">
              <ul class="navbar-nav mx-auto">
                <li class="nav-item">
                  <h2 class="text-white mt-3">{{.Site.Name}}</h2>
                </li>
              </ul>
            </div>
          </div>
        </nav>

        <div class="mx-auto mt-4 px-2 overflow-auto" style="max-height: 70vh">
          <div class="alert alert-info" role="alert">
            <i class="bi bi-pc"></i> {{.Site.Summry}}
          </div>

          <div class="container">
            <nav aria-label="breadcrumb">
              <ol class="breadcrumb">
                <template v-for="(folder, i) in breadcrumb">
                  <li v-if="i < breadcrumb.length-1" class="breadcrumb-item">
                    <a href="#" @click="navToFolder" :data-breadcrumb="i">
                      <template v-if="i == 0">
                        <i class="bi bi-file-slides"></i> Keynotes
                      </template>
                      <template v-else>{[{folder}]}</template>
                    </a>
                  </li>
                  <li v-else class="breadcrumb-item active" aria-current="page">
                    <template v-if="i == 0">
                        <i class="bi bi-file-slides"></i> Keynotes
                    </template>
                    <template v-else>{[{folder}]}</template>
                  </li>
                </template>
              </ol>
            </nav>

            <div class="row text-center">
              <div v-for="folder in folders" class="col col-4 col-md-3 col-lg-2 mb-3">
                <div><i class="bi bi-folder-fill display-1 text-warning" role="button" @click="openFolder" :data-folder="folder.Name"></i></div>
                <div><span role="button" @click="openFolder" :data-folder="folder.Name">{[{folder.Title}]}</span></div>
              </div>
              <div v-for="keynote in keynotes" class="col col-4 col-md-3 col-lg-2 mb-3">
                <div><i :class="['bi', fileIcon(keynote.Kind), 'display-1', fileIconColor(keynote.Kind)]" role="button" @click="openKeynote" :data-keynote="keynote.Name" :data-kind="keynote.Kind"></i></div>
                <div><span role="button" @click="openKeynote" :data-keynote="keynote.Name" :data-kind="keynote.Kind">{[{keynote.Title}]}</span></div>
              </div>
            </div>
          </div>
        </div>

        <div class="container fixed-bottom">
          <footer class="d-flex flex-wrap justify-content-between align-items-center py-3 my-4 border-top">
            <div class="col-md-4 d-flex align-items-center">
              <span class="mb-3 mb-md-0 text-muted">&copy; {{.Year}} {{.Site.Copyright}} {{if ne .Site.Beian ""}} <a href="{{.Site.BeianLink}}" target="_blank" class="text-muted text-decoration-none">{{.Site.Beian}}</a> {{end}}</span>
            </div>

            <div class="nav col-md-5 text-muted">
              <p>Powered by Bootstrap, Vue, Reveal.js, Gitbook, Docsify, Gin, <a href="https://github.com/huoyijie/keynote" target="_blank">Keynote</a></p>
            </div>
          </footer>
        </div>
    </div>

    <script>
      'use strict'
      const { createApp } = Vue
      createApp({
        data() {
          return {
              RootFolder: null,
              currentFolder: null
          }
        },
        computed: {
          folders() {
            if (this.currentFolder && this.currentFolder.SubFolders) {
              return this.currentFolder.SubFolders
            } else {
              return []
            }
          },
          keynotes() {
            if (this.currentFolder && this.currentFolder.Files) {
              return this.currentFolder.Files
            } else {
              return []
            }
          },
          breadcrumb() {
            if (this.currentFolder) {
              return this.currentFolder.Breadcrumb
            } else {
              return []
            }
          }
        },
        methods: {
          openFolder(e) {
            let folder = e.currentTarget.dataset.folder
            for (let f of this.folders) {
              if (f.Name == folder) {
                this.currentFolder = f
                return
              }
            }
          },
          navToFolder(e) {
            let idx = e.currentTarget.dataset.breadcrumb
            if (idx == 0) {
              this.currentFolder = this.RootFolder
              return
            }
            let p = this.RootFolder.SubFolders
            for (let i = 1; i <= idx; i++) {
              for (let f of p) {
                if (f.Name == this.breadcrumb[i]) {
                  if (i == idx) {
                    this.currentFolder = f
                    return
                  } else {
                    p = f.SubFolders
                    break
                  }
                }
              }
            }
          },
          openKeynote(e) {
            let keynote = e.currentTarget.dataset.keynote
            let kind = e.currentTarget.dataset.kind
            let path = this.breadcrumb.join('/').slice(1)
            let url = `${kind}s` + path + `/${keynote}`
            if (kind === 'gitbook') {
              url += '/latest/'
            }
            window.location.href = url
          },
          fileIcon(kind) {
            if (kind === 'keynote') {
              return 'bi-file-earmark-slides'
            } else if (kind === 'docsify') {
              return 'bi-file-earmark-richtext'
            } else if (kind === 'gitbook') {
              return 'bi-file-earmark-text'
            }
          },
          fileIconColor(kind) {
            if (kind === 'keynote') {
              return 'text-secondary'
            } else if (kind === 'docsify') {
              return 'text-success'
            } else if (kind === 'gitbook') {
              return 'text-info'
            }
          }
        },
        created() {
          let that = this
          axios.get('folders.json')
            .then(function (res) {
              that.RootFolder = res.data.RootFolder
              that.currentFolder = that.RootFolder
            })
            .catch(function (error) {
              window.location.reload()
            })
        },
        delimiters: ['{[{', '}]}'],
      }).mount('#app')
    </script>
{{ template "foot-bootstrap.htm" . }}